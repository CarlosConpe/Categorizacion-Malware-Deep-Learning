# Abstract class for machine learning models. We will use this to inherit to specific models and override each method when inherited.
class MachineLearningModel:
    # CONSTRUCTOR: Currently does nothing besides storing the name we gave it
    def __init__(self, *, model_name, verbose):
        self.name = model_name
        self.verbose = verbose
        self.training_time = 0
        self.evaluation_time = 0

    # Method for compiling our machine learning model
    def compile(self):
        if self.verbose:
            print("Model Compiled!")

    # Method for training our machine learning model. It will use the processed dataset
    def train(self, data):
        if self.verbose:
            print("Model Trained!")
        self.training_time = 1000

    # Method for evaluating our machine learning model. We use this to compute how accurate it is
    def evaluate(self, samples):
        for sample in samples:
            print(sample)
        self.precision = 0.9
        self.loss = 0.1
        if self.verbose:
            print("Model Accuracy:", self.precision)
        self.mean_evaluation_time = 10

    # Method to run the entire model. This is interface that would be used for any model.
    def run_model(self, dataset, samples):
        self.compile()
        self.train(dataset)
        self.evaluate(samples)
